---

- name: Start with no vagrant-hosts.yml
  ansible.builtin.file:
    path: ./vagrant-hosts.yml
    state: absent
  tags:
   - always

# - name: Start with no Vagrantfile
#   ansible.builtin.file:
#     path: ./Vagrantfile
#     state: absent
#   tags:
#    - always

- name: Start with no vagrant-groups.yml
  ansible.builtin.file:
    path: ./vagrant-groups.yml
    state: absent
  tags:
   - always

- name: Create synced folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  loop:
    - /tmp/srv001
    - /tmp/srv002
    - /tmp/var/www/html

- name: Add two vms to the Vagrantfile
  jclaveau.vagrant.config:
  args:
    state: "present"
    name: "{{ item }}"
    config:
      box: boxomatic/debian-11 # contains vbox additions required by synced folders with VirtualBox
      memory: 2048
      cpus: 2
      ip: "192.168.10.{{ i }}"
      netmask: 255.255.255.0
      mac: '00:50:56:3a:2d:1c'
      # playbook: "{ item }.yml"
      forwarded_ports:
        - host: "808{{ i }}"
          guest: 80
        - host: "8{{ i }}43"
          guest: 443
      synced_folders:
        - src: "/tmp"
          dest: "/tmp/{{ item }}"
        - src: /var/www
          dest: /tmp/{{ item }}/www/html
          options:
            :create: true
            :owner: root
            :group: root
            :mount_options: ['dmode=0755', 'fmode=0644']
  register: vagrant_config_add_results
  loop:
    - "srv001"
    - "srv002"
  loop_control:
    index_var: "i"

- name: dbg config add results
  ansible.builtin.debug:
    msg: "{{ vagrant_config_add_results }}"
  tags:
   - never
   - debug

- name: Vagrant config should succeed
  assert:
    that:
      - vagrant_config_add_results is success
      - vagrant_config_add_results is changed
      - vagrant_config_add_results.results | count == 2
      - vagrant_config_add_results.results[0].vms.needs == ['up']
      - vagrant_config_add_results.results[1].vms.needs == ['up']

- name: Register expected vagrant-hosts.yml content
  no_log: true
  ansible.builtin.set_fact:
    expected_vagrant_hosts_content:
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8080'
        - guest: 443
          host: '8043'
        ip: 192.168.10.0
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv001
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv001
          src: /tmp
        - dest: /tmp/srv001/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8081'
        - guest: 443
          host: '8143'
        ip: 192.168.10.1
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv002
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv002
          src: /tmp
        - dest: /tmp/srv002/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www

- name: vagrant-hosts.yml should contain
  assert:
    that:
      - "{{ item |from_yaml }} ==  {{ expected_vagrant_hosts_content }} "
  with_file:
    - ./vagrant-hosts.yml

# - name: dbg host file
#   ansible.builtin.debug:
#     msg: "{{ item }}"
#   with_file:
#     - ./vagrant-hosts.yml
  # tags:
  #  - never
  #  - debug

# Case: add new on an already existing config file
- name: Add new vm on an already existing  Vagrantfile
  jclaveau.vagrant.config:
  args:
    state: "present"
    name: "srv003"
    config:
      box: boxomatic/debian-11
  register: vagrant_config_add_results

- name: dbg results
  ansible.builtin.debug:
    msg: "{{ vagrant_config_add_results }}"
  tags:
   - never
   - debug

- name: Vagrant config should succeed
  assert:
    that:
      - vagrant_config_add_results is success
      - vagrant_config_add_results is changed
      - vagrant_config_add_results.vms.needs == ['up']

- name: Register expected vagrant-hosts.yml content
  no_log: true
  ansible.builtin.set_fact:
    expected_vagrant_hosts_content:
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8080'
        - guest: 443
          host: '8043'
        ip: 192.168.10.0
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv001
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv001
          src: /tmp
        - dest: /tmp/srv001/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8081'
        - guest: 443
          host: '8143'
        ip: 192.168.10.1
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv002
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv002
          src: /tmp
        - dest: /tmp/srv002/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-11
        name: srv003

- name: vagrant-hosts.yml should contain
  assert:
    that:
      - "{{ item |from_yaml }} ==  {{ expected_vagrant_hosts_content }} "
  with_file:
    - ./vagrant-hosts.yml

# Case: remove one box => need_destroy
- name: Remove srv002
  jclaveau.vagrant.config:
  args:
    state: "absent"
    name: "{{ item }}"
    config:
      box: boxomatic/debian-11
  register: vagrant_config_absent_results
  tags:
   - destroy
  loop:
    - "srv002"
    - "srv004"

- name: dbg absent results
  ansible.builtin.debug:
    msg: "{{ vagrant_config_absent_results }}"
  tags:
   - never
   - debug
   - destroy

- name: Vagrant config should succeed
  assert:
    that:
      - vagrant_config_absent_results is success
      - vagrant_config_absent_results is changed
      - vagrant_config_absent_results.results[0].vms.needs == ['destroy']
      - vagrant_config_absent_results.results[1].vms.needs == []
  tags:
   - destroy

- name: Register expected vagrant-hosts.yml content
  no_log: true
  ansible.builtin.set_fact:
    expected_vagrant_hosts_content:
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8080'
        - guest: 443
          host: '8043'
        ip: 192.168.10.0
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv001
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv001
          src: /tmp
        - dest: /tmp/srv001/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-11
        name: srv003

- name: vagrant-hosts.yml should contain
  assert:
    that:
      - "{{ item |from_yaml }} ==  {{ expected_vagrant_hosts_content }} "
  with_file:
    - ./vagrant-hosts.yml


# dump (if no state defined)
- include_tasks:
    file: dump_test.yml
    apply:
      tags:
        - dump
  tags:
    - dump

# Case: update a vm config with no change
- name: Update srv003 generating no change
  jclaveau.vagrant.config:
  args:
    state: "present"
    name: "srv003"
    config:
      box: boxomatic/debian-11
  register: vagrant_config_update_results

- name: dbg results
  ansible.builtin.debug:
    msg: "{{ vagrant_config_update_results }}"
  # tags:
  #  - never
  #  - debug

- name: Vagrant config update should succeed
  assert:
    that:
      - vagrant_config_update_results is success
      - vagrant_config_update_results is not changed
      - vagrant_config_update_results.vms.needs == []

- name: Register expected vagrant-hosts.yml content
  no_log: true
  ansible.builtin.set_fact:
    expected_vagrant_hosts_content:
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8080'
        - guest: 443
          host: '8043'
        ip: 192.168.10.0
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv001
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv001
          src: /tmp
        - dest: /tmp/srv001/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-11
        name: srv003

- name: vagrant-hosts.yml should contain
  assert:
    that:
      - "{{ item |from_yaml }} ==  {{ expected_vagrant_hosts_content }} "
  with_file:
    - ./vagrant-hosts.yml

# Case: update a vm config requiring reloading the vm
- name: Update srv003 requiring reloading the vm
  jclaveau.vagrant.config:
  args:
    state: "present"
    name: "srv003"
    config:
      box: boxomatic/debian-11
      cpus: 3
  register: vagrant_config_update_results

- name: dbg results
  ansible.builtin.debug:
    msg: "{{ vagrant_config_update_results }}"
  # tags:
  #  - never
  #  - debug

- name: Vagrant config update should succeed
  assert:
    that:
      - vagrant_config_update_results is success
      - vagrant_config_update_results is changed
      - vagrant_config_update_results.vms.needs == ['reload']

- name: Register expected vagrant-hosts.yml content
  no_log: true
  ansible.builtin.set_fact:
    expected_vagrant_hosts_content:
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8080'
        - guest: 443
          host: '8043'
        ip: 192.168.10.0
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv001
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv001
          src: /tmp
        - dest: /tmp/srv001/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-11
        cpus: 3
        name: srv003

- name: vagrant-hosts.yml should contain
  assert:
    that:
      - "{{ item |from_yaml }} ==  {{ expected_vagrant_hosts_content }} "
  with_file:
    - ./vagrant-hosts.yml

# Case: update a vm config requiring recreating the vm
- name: Update srv003 requiring recreation
  jclaveau.vagrant.config:
  args:
    state: "present"
    name: "srv003"
    config:
      box: boxomatic/debian-9
      cpus: 1
  register: vagrant_config_update_results

- name: dbg results
  ansible.builtin.debug:
    msg: "{{ vagrant_config_update_results }}"
  # tags:
  #  - never
  #  - debug

- name: Vagrant config update should succeed
  assert:
    that:
      - vagrant_config_update_results is success
      - vagrant_config_update_results is changed
      - vagrant_config_update_results.vms.needs == ['destroy', 'up']

- name: Register expected vagrant-hosts.yml content
  no_log: true
  ansible.builtin.set_fact:
    expected_vagrant_hosts_content:
      - box: boxomatic/debian-11
        cpus: 2
        forwarded_ports:
        - guest: 80
          host: '8080'
        - guest: 443
          host: '8043'
        ip: 192.168.10.0
        mac: 00:50:56:3a:2d:1c
        memory: 2048
        name: srv001
        netmask: 255.255.255.0
        synced_folders:
        - dest: /tmp/srv001
          src: /tmp
        - dest: /tmp/srv001/www/html
          options:
            :create: true
            :group: root
            :mount_options:
            - dmode=0755
            - fmode=0644
            :owner: root
          src: /var/www
      - box: boxomatic/debian-9
        cpus: 1
        name: srv003

- name: vagrant-hosts.yml should contain
  assert:
    that:
      - "{{ item |from_yaml }} ==  {{ expected_vagrant_hosts_content }} "
  with_file:
    - ./vagrant-hosts.yml

# Providers tests
- import_tasks:
    file: providers_virtualbox_test.yml

- import_tasks:
    file: providers_libvirt_test.yml

- import_tasks:
    file: providers_docker_test.yml
